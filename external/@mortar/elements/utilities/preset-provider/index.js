import {
  MtePresetService,
  __decorateClass,
  defineElement,
  isSsr,
  onUpdate,
  presetContext,
  styles7 as styles
} from "../../chunks/chunk.KVXAK6W4.js";

// src/utilities/preset-provider/preset-provider.element.ts
import { LitElement, html } from "lit";
import { property } from "lit/decorators.js";

// src/utilities/preset-provider/preset-provider.styles.ts
import { css } from "lit";
var styles2 = css`:host{display:contents}`;

// src/utilities/preset-provider/preset-provider.element.ts
import { ContextProvider } from "@lit-labs/context";
var MtePresetProvider = class extends LitElement {
  constructor() {
    super();
    this.configId = "global";
    if (!isSsr()) {
      this.presetContextProvider = new ContextProvider(this, {
        context: presetContext,
        initialValue: void 0
      });
    }
  }
  handlePresetChange(changes) {
    if (!isSsr() && (changes.has("config") || changes.has("configId")) && this.config) {
      MtePresetService.setPreset(this.configId ?? "global", this.config);
    }
    const newPresetContext = this.context ? this.context : "global";
    const contextPresetTheme = MtePresetService.getComponentPreset(newPresetContext, "theme");
    this.theme = contextPresetTheme?.name;
    this.colorScheme = contextPresetTheme?.colorScheme;
    if (changes.has("context")) {
      this.presetContextProvider?.setValue(newPresetContext);
    }
  }
  render() {
    return html`<slot></slot>`;
  }
};
MtePresetProvider.styles = [styles, styles2];
__decorateClass([
  property({ reflect: true })
], MtePresetProvider.prototype, "context", 2);
__decorateClass([
  property({ reflect: true })
], MtePresetProvider.prototype, "configId", 2);
__decorateClass([
  property({ type: Object })
], MtePresetProvider.prototype, "config", 2);
__decorateClass([
  property({ reflect: true, attribute: "data-mte-theme" })
], MtePresetProvider.prototype, "theme", 2);
__decorateClass([
  property({ reflect: true, attribute: "data-mte-color-scheme" })
], MtePresetProvider.prototype, "colorScheme", 2);
__decorateClass([
  onUpdate(["config", "configId", "context"], { on: "both" })
], MtePresetProvider.prototype, "handlePresetChange", 1);
MtePresetProvider = __decorateClass([
  defineElement("mte-preset-provider")
], MtePresetProvider);
export {
  MtePresetProvider
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vc3JjL3V0aWxpdGllcy9wcmVzZXQtcHJvdmlkZXIvcHJlc2V0LXByb3ZpZGVyLmVsZW1lbnQudHMiLCAiLi4vLi4vLi4vLi4vc3JjL3V0aWxpdGllcy9wcmVzZXQtcHJvdmlkZXIvcHJlc2V0LXByb3ZpZGVyLnN0eWxlcy50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgcHJlc2V0Q29udGV4dCB9IGZyb20gJy4uLy4uL2NvcmUvcHJlc2V0cy9wcmVzZXQuY29udGV4dCc7XG5pbXBvcnQgeyBMaXRFbGVtZW50LCBQcm9wZXJ0eVZhbHVlTWFwLCBodG1sIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IHByb3BlcnR5IH0gZnJvbSAnbGl0L2RlY29yYXRvcnMuanMnO1xuaW1wb3J0IHtcbiAgZGVmaW5lRWxlbWVudCxcbiAgTXRlRWxlbWVudFBhcnRzLFxuICBiYXNlU3R5bGVzLFxuICBNb3J0YXJQcmVzZXQsXG4gIG9uVXBkYXRlLFxuICBNdGVQcmVzZXRTZXJ2aWNlLFxuICBNb3J0YXJQcmVzZXRUaGVtZSxcbiAgaXNTc3IsXG59IGZyb20gJy4uLy4uL2NvcmUnO1xuaW1wb3J0IHsgc3R5bGVzIH0gZnJvbSAnLi9wcmVzZXQtcHJvdmlkZXIuc3R5bGVzJztcbmltcG9ydCB7IENvbnRleHRQcm92aWRlciB9IGZyb20gJ0BsaXQtbGFicy9jb250ZXh0JztcblxuZXhwb3J0IGludGVyZmFjZSBNdGVQcmVzZXRQcm92aWRlclBhcnRzIGV4dGVuZHMgTXRlRWxlbWVudFBhcnRzIHt9XG5cbi8qKlxuICogQHNsb3QgLSBEZWZhdWx0IHNsb3R0ZWQgY29udGVudFxuICovXG5AZGVmaW5lRWxlbWVudCgnbXRlLXByZXNldC1wcm92aWRlcicpXG5leHBvcnQgY2xhc3MgTXRlUHJlc2V0UHJvdmlkZXIgZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgc3RhdGljIHN0eWxlcyA9IFtiYXNlU3R5bGVzLCBzdHlsZXNdO1xuXG4gIC8qKiBUaGUgcHJlc2V0IHRvIGJlIHVzZWQgdG8gcmVuZGVyIGNoaWxkIGVsZW1lbnRzICovXG4gIEBwcm9wZXJ0eSh7IHJlZmxlY3Q6IHRydWUgfSkgY29udGV4dDogJ2RlZmF1bHQnIHwgJ3B4JyB8ICdjeCcgfCAncngnIHwgc3RyaW5nO1xuXG4gIC8qKiBUaGUgcmVnaXN0ZXJlZCBwcmVzZXQgSUQgbmFtZSB0aGUgZ2l2ZW4gYGNvbmZpZ2Agd2lsbCBiZSBzZXQgZm9yICovXG4gIEBwcm9wZXJ0eSh7IHJlZmxlY3Q6IHRydWUgfSkgY29uZmlnSWQgPSAnZ2xvYmFsJztcblxuICAvKiogVGhlIGNvbmZpZyBwYXNzZWQgaGVyZSB3aWxsIGJlIHNldCBhcyB0aGUgcHJlc2V0IGNvbmZpZyBmb3IgdGhlIGBjb25maWdJZGAgaW4gdGhlIGBNdGVQcmVzZXRTZXJ2aWNlYCAqL1xuICBAcHJvcGVydHkoeyB0eXBlOiBPYmplY3QgfSkgY29uZmlnOiBNb3J0YXJQcmVzZXQ7XG5cbiAgLyoqXG4gICAqIFRoZSB0aGVtZSBhcHBsaWVkIHRvIGNoaWxkIGVsZW1lbnRzXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIEBwcm9wZXJ0eSh7IHJlZmxlY3Q6IHRydWUsIGF0dHJpYnV0ZTogJ2RhdGEtbXRlLXRoZW1lJyB9KSB0aGVtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgdGhlbWUgY29sb3Igc2NoZW1lIGFwcGxpZWQgdG8gY2hpbGQgZWxlbWVudHNcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgQHByb3BlcnR5KHsgcmVmbGVjdDogdHJ1ZSwgYXR0cmlidXRlOiAnZGF0YS1tdGUtY29sb3Itc2NoZW1lJyB9KVxuICBjb2xvclNjaGVtZTogTW9ydGFyUHJlc2V0VGhlbWVbJ2NvbG9yU2NoZW1lJ107XG5cbiAgcHJpdmF0ZSBwcmVzZXRDb250ZXh0UHJvdmlkZXI6IENvbnRleHRQcm92aWRlcjx7IF9fY29udGV4dF9fOiBzdHJpbmcgfT47XG5cbiAgQG9uVXBkYXRlKFsnY29uZmlnJywgJ2NvbmZpZ0lkJywgJ2NvbnRleHQnXSwgeyBvbjogJ2JvdGgnIH0pXG4gIHByaXZhdGUgaGFuZGxlUHJlc2V0Q2hhbmdlKGNoYW5nZXM6IFByb3BlcnR5VmFsdWVNYXA8YW55Pikge1xuICAgIC8vIFVwZGF0ZSBwcmVzZXQgYXMgY29uZmlndXJlZFxuICAgIGlmICghaXNTc3IoKSAmJiAoY2hhbmdlcy5oYXMoJ2NvbmZpZycpIHx8IGNoYW5nZXMuaGFzKCdjb25maWdJZCcpKSAmJiB0aGlzLmNvbmZpZykge1xuICAgICAgTXRlUHJlc2V0U2VydmljZS5zZXRQcmVzZXQodGhpcy5jb25maWdJZCA/PyAnZ2xvYmFsJywgdGhpcy5jb25maWcpO1xuICAgIH1cbiAgICBjb25zdCBuZXdQcmVzZXRDb250ZXh0ID0gdGhpcy5jb250ZXh0ID8gdGhpcy5jb250ZXh0IDogJ2dsb2JhbCc7XG4gICAgY29uc3QgY29udGV4dFByZXNldFRoZW1lID0gTXRlUHJlc2V0U2VydmljZS5nZXRDb21wb25lbnRQcmVzZXQobmV3UHJlc2V0Q29udGV4dCwgJ3RoZW1lJyk7XG4gICAgdGhpcy50aGVtZSA9IGNvbnRleHRQcmVzZXRUaGVtZT8ubmFtZTtcbiAgICB0aGlzLmNvbG9yU2NoZW1lID0gY29udGV4dFByZXNldFRoZW1lPy5jb2xvclNjaGVtZTtcbiAgICAvLyBJZiByZXF1ZXN0ZWQgZW1pdCBuZXcgY29udGV4dFxuICAgIGlmIChjaGFuZ2VzLmhhcygnY29udGV4dCcpKSB7XG4gICAgICB0aGlzLnByZXNldENvbnRleHRQcm92aWRlcj8uc2V0VmFsdWUobmV3UHJlc2V0Q29udGV4dCk7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGlmICghaXNTc3IoKSkge1xuICAgICAgdGhpcy5wcmVzZXRDb250ZXh0UHJvdmlkZXIgPSBuZXcgQ29udGV4dFByb3ZpZGVyKHRoaXMsIHtcbiAgICAgICAgY29udGV4dDogcHJlc2V0Q29udGV4dCxcbiAgICAgICAgaW5pdGlhbFZhbHVlOiB1bmRlZmluZWQsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIGh0bWxgPHNsb3Q+PC9zbG90PmA7XG4gIH1cbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgSFRNTEVsZW1lbnRUYWdOYW1lTWFwIHtcbiAgICAnbXRlLXByZXNldC1wcm92aWRlcic6IE10ZVByZXNldFByb3ZpZGVyO1xuICB9XG59XG4iLCAiaW1wb3J0IHsgY3NzIH0gZnJvbSAnbGl0JztleHBvcnQgY29uc3Qgc3R5bGVzID0gY3NzYDpob3N0e2Rpc3BsYXk6Y29udGVudHN9YDsiXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7OztBQUNBLFNBQVMsWUFBOEIsWUFBWTtBQUNuRCxTQUFTLGdCQUFnQjs7O0FDRnpCLFNBQVMsV0FBVztBQUFhLElBQU1BLFVBQVM7OztBRGNoRCxTQUFTLHVCQUF1QjtBQVF6QixJQUFNLG9CQUFOLGNBQWdDLFdBQVc7QUFBQSxFQTJDaEQsY0FBYztBQUNaLFVBQU07QUFyQ3FCLG9CQUFXO0FBdUN0QyxRQUFJLENBQUMsTUFBTSxHQUFHO0FBQ1osV0FBSyx3QkFBd0IsSUFBSSxnQkFBZ0IsTUFBTTtBQUFBLFFBQ3JELFNBQVM7QUFBQSxRQUNULGNBQWM7QUFBQSxNQUNoQixDQUFDO0FBQUEsSUFDSDtBQUFBLEVBQ0Y7QUFBQSxFQXhCUSxtQkFBbUIsU0FBZ0M7QUFFekQsUUFBSSxDQUFDLE1BQU0sTUFBTSxRQUFRLElBQUksUUFBUSxLQUFLLFFBQVEsSUFBSSxVQUFVLE1BQU0sS0FBSyxRQUFRO0FBQ2pGLHVCQUFpQixVQUFVLEtBQUssWUFBWSxVQUFVLEtBQUssTUFBTTtBQUFBLElBQ25FO0FBQ0EsVUFBTSxtQkFBbUIsS0FBSyxVQUFVLEtBQUssVUFBVTtBQUN2RCxVQUFNLHFCQUFxQixpQkFBaUIsbUJBQW1CLGtCQUFrQixPQUFPO0FBQ3hGLFNBQUssUUFBUSxvQkFBb0I7QUFDakMsU0FBSyxjQUFjLG9CQUFvQjtBQUV2QyxRQUFJLFFBQVEsSUFBSSxTQUFTLEdBQUc7QUFDMUIsV0FBSyx1QkFBdUIsU0FBUyxnQkFBZ0I7QUFBQSxJQUN2RDtBQUFBLEVBQ0Y7QUFBQSxFQWFBLFNBQVM7QUFDUCxXQUFPO0FBQUEsRUFDVDtBQUNGO0FBekRhLGtCQUNKLFNBQVMsQ0FBQyxRQUFZQyxPQUFNO0FBR047QUFBQSxFQUE1QixTQUFTLEVBQUUsU0FBUyxLQUFLLENBQUM7QUFBQSxHQUpoQixrQkFJa0I7QUFHQTtBQUFBLEVBQTVCLFNBQVMsRUFBRSxTQUFTLEtBQUssQ0FBQztBQUFBLEdBUGhCLGtCQU9rQjtBQUdEO0FBQUEsRUFBM0IsU0FBUyxFQUFFLE1BQU0sT0FBTyxDQUFDO0FBQUEsR0FWZixrQkFVaUI7QUFNOEI7QUFBQSxFQUF6RCxTQUFTLEVBQUUsU0FBUyxNQUFNLFdBQVcsaUJBQWlCLENBQUM7QUFBQSxHQWhCN0Msa0JBZ0IrQztBQU8xRDtBQUFBLEVBREMsU0FBUyxFQUFFLFNBQVMsTUFBTSxXQUFXLHdCQUF3QixDQUFDO0FBQUEsR0F0QnBELGtCQXVCWDtBQUtRO0FBQUEsRUFEUCxTQUFTLENBQUMsVUFBVSxZQUFZLFNBQVMsR0FBRyxFQUFFLElBQUksT0FBTyxDQUFDO0FBQUEsR0EzQmhELGtCQTRCSDtBQTVCRyxvQkFBTjtBQUFBLEVBRE4sY0FBYyxxQkFBcUI7QUFBQSxHQUN2QjsiLAogICJuYW1lcyI6IFsic3R5bGVzIiwgInN0eWxlcyJdCn0K
